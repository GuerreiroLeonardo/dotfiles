[alias]
	# One Character Shorthands
	b = branch -v                 # branches with latest commit summary
	c = commit
	d = diff  --color-words
	g = !gitg
	k = !gitk
	l = log --graph --date=short
	s = !git st

	# Two Character Shorthands
	br = branch                   # branch
	co = checkout                 # checkout
	nb = !git co -b               # new branch
	st = status -sb               # status in a concise manner
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate

	# Nice log graph
	graph = log --graph --oneline

	# git-tools should open through git
	visual = cola

	# I forget too easily.
	stage = add
	unstage = reset HEAD --

	undo = reset --soft HEAD~1    # undo your last commit
	amend = commit --amend        # amend your last commit

	diffc = diff --cached

	# Remotes from various places is useful to have
	remote-add-gh = "!f() { git remote add $1 https://github.com/$2.git; }; f"
	remote-add-bb = "!f() { git remote add $1 https://bitbucket.org/$2.git; }; f"
	remote-add-gl = "!f() { git remote add $1 https://gitlab.com/$2.git; }; f"

[apply]
	whitespace = error

[commit]
	template = ~/.git-commit-template
	gpgsign = true

[core]
	excludesfile = ~/.gitignore
	autocrlf = input
	editor = code -w
	whitespace = trailing-space,tab-in-indent,cr-at-eol

[diff]
	algorithm = patience
	tool = meld

[gui]
	editor = code -w
	fontdiff = -family \"Source Code Pro\" -size -12 -weight normal -slant roman -underline 0 -overstrike 0
	historybrowser = gitg

[help]
	autocorrect = 20

[init]
	templatedir = ~/.git-templates

[merge]
	tool = meld
	conflictstyle = diff3

[push]
	default = simple

[user]
    useConfigOnly = true

[include]
	path = ~/.gitconfig.local

# Pro-tip: Makes life with submodules easier.
# [url "git@github.com:yourname/"]
# 	insteadOf = "git://github.com/yourname/"
